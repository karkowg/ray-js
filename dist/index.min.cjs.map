{"version":3,"file":"index.min.cjs","sources":["../src/payloads/ColorPayload.js","../src/index.js","../src/payloads/NewScreenPayload.js","../src/payloads/SizePayload.js","../src/payloads/RemovePayload.js","../src/payloads/HidePayload.js","../src/payloads/NotifyPayload.js","../src/payloads/LogPayload.js","../src/utils/type.js","../src/payloads/CustomPayload.js"],"sourcesContent":["export default color => ({\n    type: 'color',\n    content: { color },\n})\n","import axios from 'axios'\nimport { v4 as uuid } from 'uuid'\nimport ColorPayload from './payloads/ColorPayload'\nimport HidePayload from './payloads/HidePayload'\nimport LogPayload from './payloads/LogPayload'\nimport NewScreenPayload from './payloads/NewScreenPayload'\nimport RemovePayload from './payloads/RemovePayload'\nimport SizePayload from './payloads/SizePayload'\nimport NotifyPayload from './payloads/NotifyPayload'\nimport CustomPayload from './payloads/CustomPayload'\nimport StackTrace from 'stacktrace-js'\nimport type from './utils/type'\n\nclass Ray {\n    static client\n\n    constructor(host = '127.0.0.1', port = 23517) {\n        this.uuid = uuid()\n        this.client = axios.create({\n            baseURL: `http://${host}:${port}/`,\n        })\n    }\n\n    newScreen(name = '') {\n        this.sendRequest(NewScreenPayload(name))\n\n        return this\n    }\n\n    clearScreen() {\n        return this.newScreen()\n    }\n\n    color(color) {\n        this.sendRequest(ColorPayload(color))\n\n        return this\n    }\n\n    size(size) {\n        this.sendRequest(SizePayload(size))\n\n        return this\n    }\n\n    remove() {\n        this.sendRequest(RemovePayload())\n\n        return this\n    }\n\n    hide() {\n        this.sendRequest(HidePayload())\n\n        return this\n    }\n\n    notify(text) {\n        this.sendRequest(NotifyPayload(text))\n\n        return this\n    }\n\n    die() {\n        process.exit()\n    }\n\n    showWhen(boolOrFunc) {\n        if (typeof boolOrFunc == 'function') boolOrFunc = boolOrFunc()\n\n        if (!boolOrFunc) this.remove()\n\n        return this\n    }\n\n    showIf(boolOrFunc) {\n        return this.showWhen(boolOrFunc)\n    }\n\n    removeWhen(boolOrFunc) {\n        if (typeof boolOrFunc == 'function') boolOrFunc = boolOrFunc()\n\n        if (boolOrFunc) this.remove()\n\n        return this\n    }\n\n    removeIf(boolOrFunc) {\n        return this.removeWhen(boolOrFunc)\n    }\n\n    ban() {\n        return this.send('ðŸ•¶')\n    }\n\n    charles() {\n        return this.send('ðŸŽ¶ ðŸŽ¹ ðŸŽ· ðŸ•º')\n    }\n\n    send(...values) {\n        if (values.length == 0) return this\n\n        this.sendRequest(LogPayload(\n            ...values.map(v => type(v) === 'object' ? JSON.stringify(v) : v)\n        ))\n\n        return this\n    }\n\n    pass(value) {\n        this.send(value)\n\n        return value\n    }\n\n    sendCustom(content, label = '') {\n        this.sendRequest(CustomPayload(content, label))\n\n        return this\n    }\n\n    getOrigin() {\n        const st = StackTrace.getSync()\n        return st.find(({ fileName }) => !fileName.includes('js-ray/dist/index') )\n    }\n\n    sendRequest(...payloads) {\n        const origin = this.getOrigin()\n        const requestPayload = {\n            uuid: this.uuid,\n            payloads: payloads.map(payload => {\n                payload.origin = {\n                    file: origin.fileName || 'unknown.js',\n                    line_number: origin.lineNumber || 1,\n                }\n\n                return payload\n            }),\n            meta: [],\n        }\n\n        this.client.post('/', requestPayload)\n    }\n}\n\nexport const ray = (...args) => new Ray().send(...args)\n","export default name => ({\n    type: 'new_screen',\n    content: { name },\n})\n","export default size => ({\n    type: 'size',\n    content: { size },\n})\n","export default () => ({\n    type: 'remove',\n    content: [],\n})\n","export default () => ({\n    type: 'hide',\n    content: [],\n})\n","export default value => ({\n    type: 'notify',\n    content: { value },\n})\n","export default (...values) => {\n    return {\n        type: 'log',\n        content: { values },\n    }\n}\n","/**\n * Check type of operand with more specificity than `typeof`.\n *   Slightly modified version of MDN helper found in `typeof` definition page.\n * @link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/typeof#real-world_usage\n *\n * @param {*} obj\n * @returns {string}\n */\nexport default function type(obj) {\n  if (obj == null) {\n    return (obj + '').toLowerCase() // implicit toString() conversion\n  }\n\n  const deepType = Object.prototype.toString.call(obj).slice(8, -1).toLowerCase()\n\n  if (deepType === 'generatorfunction') {\n    return 'function'\n  }\n\n  // Prevent over-specificity (for example, [object HTMLDivElement], etc).\n  // Account for functionish Regexp (Android <=2.3), functionish <object> element (Chrome <=57, Firefox <=52), etc.\n  // String.prototype.match is universally supported.\n\n  if (deepType.match(/^(array|bigint|date|error|function|generator|regexp|symbol)$/)) {\n    return deepType\n  }\n\n  return (typeof obj === 'object' || typeof obj === 'function')\n    ? 'object'\n    : typeof obj\n}\n","export default (content, label) => ({\n    type: 'custom',\n    content: { content, label },\n})\n"],"names":["Ray","constructor","host","port","uuid","client","axios","create","baseURL","newScreen","name","sendRequest","type","content","NewScreenPayload","this","clearScreen","color","ColorPayload","size","SizePayload","remove","hide","notify","text","value","die","process","exit","showWhen","boolOrFunc","showIf","removeWhen","removeIf","ban","send","charles","values","length","LogPayload","map","v","obj","toLowerCase","deepType","Object","prototype","toString","call","slice","match","JSON","stringify","pass","sendCustom","label","CustomPayload","getOrigin","StackTrace","getSync","find","fileName","includes","payloads","origin","requestPayload","payload","file","line_number","lineNumber","meta","post","args"],"mappings":"kOAAA,UCaA,MAAMA,EAGFC,YAAYC,EAAO,YAAaC,EAAO,YAC9BC,KAAOA,YACPC,OAASC,UAAMC,OAAO,CACvBC,QAAU,UAASN,KAAQC,OAInCM,UAAUC,EAAO,gBACRC,aCxBED,KACXE,KAAM,aACNC,QAAS,CAAEH,KAAAA,KDsBUI,CAAiBJ,IAE3BK,KAGXC,qBACWD,KAAKN,YAGhBQ,MAAMA,eACGN,aDlCEM,KACXL,KAAM,QACNC,QAAS,CAAEI,MAAAA,KCgCUC,CAAaD,IAEvBF,KAGXI,KAAKA,eACIR,aExCEQ,KACXP,KAAM,OACNC,QAAS,CAAEM,KAAAA,KFsCUC,CAAYD,IAEtBJ,KAGXM,qBACSV,aG7CTC,KAAM,SACNC,QAAS,KH8CEE,KAGXO,mBACSX,aInDTC,KAAM,OACNC,QAAS,KJoDEE,KAGXQ,OAAOC,eACEb,aKzDTC,KAAM,SACNC,QAAS,CAAEY,MLwDwBD,KAExBT,KAGXW,MACIC,QAAQC,OAGZC,SAASC,SACoB,mBAAdA,IAA0BA,EAAaA,KAE7CA,GAAYf,KAAKM,SAEfN,KAGXgB,OAAOD,UACIf,KAAKc,SAASC,GAGzBE,WAAWF,SACkB,mBAAdA,IAA0BA,EAAaA,KAE9CA,GAAYf,KAAKM,SAEdN,KAGXkB,SAASH,UACEf,KAAKiB,WAAWF,GAG3BI,aACWnB,KAAKoB,KAAK,MAGrBC,iBACWrB,KAAKoB,KAAK,eAGrBA,QAAQE,UACiB,GAAjBA,EAAOC,aAEN3B,iBMtGM0B,KACR,CACHzB,KAAM,MACNC,QAAS,CAAEwB,OAAAA,KNmGME,IACVF,EAAOG,KAAIC,GAAiB,WO/F5B,SAAcC,MAChB,MAAPA,SACMA,EAAM,IAAIC,oBAGdC,EAAWC,OAAOC,UAAUC,SAASC,KAAKN,GAAKO,MAAM,GAAI,GAAGN,oBAEjD,sBAAbC,EACK,WAOLA,EAASM,MAAM,gEACVN,EAGc,iBAARF,GAAmC,mBAARA,EACtC,gBACOA,EP0EkB9B,CAAK6B,GAAkBU,KAAKC,UAAUX,GAAKA,MAHnC1B,KASnCsC,KAAK5B,eACIU,KAAKV,GAEHA,EAGX6B,WAAWzC,EAAS0C,EAAQ,gBACnB5C,cQpHGE,EAAS0C,MACrB3C,KAAM,SACNC,QAAS,CAAEA,QAAAA,EAAS0C,MAAAA,KRkHCC,CAAc3C,EAAS0C,IAEjCxC,KAGX0C,mBACeC,UAAWC,UACZC,MAAK,EAAGC,SAAAA,MAAgBA,EAASC,SAAS,uBAGxDnD,eAAeoD,SACLC,EAASjD,KAAK0C,YACdQ,EAAiB,CACnB7D,KAAMW,KAAKX,KACX2D,SAAUA,EAASvB,KAAI0B,IACnBA,EAAQF,OAAS,CACbG,KAAMH,EAAOH,UAAY,aACzBO,YAAaJ,EAAOK,YAAc,GAG/BH,KAEXI,KAAM,SAGLjE,OAAOkE,KAAK,IAAKN,8BAhIxBjE,qGAoIa,IAAIwE,KAAS,IAAIxE,GAAMmC,QAAQqC"}